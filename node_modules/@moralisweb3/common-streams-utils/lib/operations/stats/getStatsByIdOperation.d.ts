import { Camelize, Operation } from '@moralisweb3/common-core';
import { operations } from '../openapi';
declare type OperationId = 'GetStatsByStreamId';
declare type PathParams = operations[OperationId]['parameters']['path'];
declare type RequestParams = PathParams;
declare type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetStatsByIdRequest extends Camelize<RequestParams> {
}
export declare type GetStatsByIdJSONRequest = ReturnType<typeof serializeRequest>;
export declare type GetStatsByIdJSONResponse = SuccessResponse;
export declare type GetStatsByIdResponse = ReturnType<typeof deserializeResponse>;
export declare const getStatsByIdOperation: Operation<GetStatsByIdRequest, GetStatsByIdJSONRequest, GetStatsByIdResponse, GetStatsByIdJSONResponse>;
declare function deserializeResponse(jsonResponse: GetStatsByIdJSONResponse): {
    totalWebhooksDelivered: number;
    totalWebhooksFailed: number;
    totalLogsProcessed: number;
    totalTxsProcessed: number;
    totalTxsInternalProcessed: number;
    streams?: {
        totalWebhooksDelivered: number;
        totalWebhooksFailed: number;
        totalLogsProcessed: number;
        totalTxsProcessed: number;
        totalTxsInternalProcessed: number;
        streamId: string;
    }[] | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
};
declare function serializeRequest(request: GetStatsByIdRequest): GetStatsByIdRequest;
export {};
//# sourceMappingURL=getStatsByIdOperation.d.ts.map