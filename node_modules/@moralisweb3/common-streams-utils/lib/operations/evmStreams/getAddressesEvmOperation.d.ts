import { Camelize, Core, PaginatedOperation } from '@moralisweb3/common-core';
import { EvmAddress } from '@moralisweb3/common-evm-utils';
import { operations } from '../openapi';
declare type OperationId = 'GetAddresses';
declare type PathParams = operations[OperationId]['parameters']['path'];
declare type QueryParams = operations[OperationId]['parameters']['query'];
declare type RequestParams = PathParams & QueryParams;
declare type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetAddressesEvmRequest extends Camelize<Omit<RequestParams, 'limit'>> {
    limit?: number;
}
export declare type GetAddressesEvmJSONRequest = ReturnType<typeof serializeRequest>;
export declare type GetAddressesEvmJSONResponse = SuccessResponse;
export declare type GetAddressesEvmResponse = ReturnType<typeof deserializeResponse>;
export declare const getAddressesEvmOperation: PaginatedOperation<GetAddressesEvmRequest, GetAddressesEvmJSONRequest, GetAddressesEvmResponse, GetAddressesEvmJSONResponse['result']>;
declare function deserializeResponse(jsonResponse: GetAddressesEvmJSONResponse, request: GetAddressesEvmRequest, core: Core): {
    address: EvmAddress | undefined;
}[];
declare function serializeRequest(request: GetAddressesEvmRequest): {
    id: string;
    limit: number | undefined;
    cursor: string | undefined;
};
export {};
//# sourceMappingURL=getAddressesEvmOperation.d.ts.map