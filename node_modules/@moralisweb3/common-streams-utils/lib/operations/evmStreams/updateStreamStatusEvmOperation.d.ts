import { Camelize, Operation } from '@moralisweb3/common-core';
import { operations } from '../openapi';
declare type OperationId = 'UpdateStreamStatus';
declare type PathParams = operations[OperationId]['parameters']['path'];
declare type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
declare type RequestParams = PathParams & BodyParams;
declare type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface UpdateStreamStatusEvmRequest extends Camelize<RequestParams> {
}
export declare type UpdateStreamStatusEvmJSONRequest = ReturnType<typeof serializeRequest>;
export declare type UpdateStreamStatusEvmJSONResponse = SuccessResponse;
export declare type UpdateStreamStatusEvmResponse = ReturnType<typeof deserializeResponse>;
export declare const updateStreamStatusEvmOperation: Operation<UpdateStreamStatusEvmRequest, UpdateStreamStatusEvmJSONRequest, UpdateStreamStatusEvmResponse, UpdateStreamStatusEvmJSONResponse>;
declare function deserializeResponse(jsonResponse: UpdateStreamStatusEvmJSONResponse): {
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        anonymous?: boolean | undefined;
        constant?: boolean | undefined;
        inputs?: {
            name: string;
            type: string;
            indexed?: boolean | undefined;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        name?: string | undefined;
        outputs?: {
            name: string;
            type: string;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        payable?: boolean | undefined;
        stateMutability?: string | undefined;
        type: string;
        gas?: number | undefined;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    chainIds: string[];
    demo?: boolean | undefined;
    id: string;
    status: "active" | "paused" | "error" | "terminated";
    statusMessage: string;
};
declare function serializeRequest(request: UpdateStreamStatusEvmRequest): {
    id: string;
    status: Camelize<"active" | "paused" | "error" | "terminated">;
};
export {};
//# sourceMappingURL=updateStreamStatusEvmOperation.d.ts.map