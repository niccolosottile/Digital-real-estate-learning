import { Core, Camelize, PaginatedOperation } from '@moralisweb3/common-core';
import { EvmStream } from '../../dataTypes';
import { operations } from '../openapi';
declare type OperationId = 'GetStreams';
declare type QueryParams = operations[OperationId]['parameters']['query'];
declare type RequestParams = QueryParams;
declare type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetStreamsEvmRequest extends Camelize<RequestParams> {
}
export declare type GetStreamsEvmJSONRequest = ReturnType<typeof serializeRequest>;
export declare type GetStreamsEvmJSONResponse = SuccessResponse;
export declare type GetStreamsEvmResponse = ReturnType<typeof deserializeResponse>;
export declare const getStreamsEvmOperation: PaginatedOperation<GetStreamsEvmRequest, GetStreamsEvmJSONRequest, GetStreamsEvmResponse, GetStreamsEvmJSONResponse['result']>;
declare function deserializeResponse(jsonResponse: GetStreamsEvmJSONResponse, request: GetStreamsEvmRequest, core: Core): EvmStream[];
declare function serializeRequest(request: GetStreamsEvmRequest): {
    cursor: string | undefined;
    limit: number;
};
export {};
//# sourceMappingURL=getStreamsEvmOperation.d.ts.map