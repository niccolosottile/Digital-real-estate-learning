import { Core, Camelize, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { EvmChainish, EvmAddressish, EvmNative } from '../../dataTypes';
import { operations } from '../openapi';
declare type OperationId = 'getNativeBalance';
declare type PathParams = operations[OperationId]['parameters']['path'];
declare type QueryParams = operations[OperationId]['parameters']['query'];
declare type RequestParams = PathParams & QueryParams;
declare type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetNativeBalanceRequest extends Camelize<Omit<RequestParams, 'chain' | 'address'>> {
    chain?: EvmChainish;
    address: EvmAddressish;
}
export declare type GetNativeBalanceJSONRequest = ReturnType<typeof serializeRequest>;
export declare type GetNativeBalanceJSONResponse = SuccessResponse;
export declare type GetNativeBalanceResponse = ReturnType<typeof deserializeResponse>;
export interface GetNativeBalanceResponseAdapter extends ResponseAdapter<GetNativeBalanceResponse, GetNativeBalanceJSONResponse> {
}
/** Get the native balance for a specific wallet address. */
export declare const getNativeBalanceOperation: Operation<GetNativeBalanceRequest, GetNativeBalanceJSONRequest, GetNativeBalanceResponse, GetNativeBalanceJSONResponse>;
declare function deserializeResponse(jsonResponse: GetNativeBalanceJSONResponse): {
    balance: EvmNative;
};
declare function serializeRequest(request: GetNativeBalanceRequest, core: Core): {
    chain: "0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d";
    providerUrl: string | undefined;
    toBlock: number | undefined;
    address: string;
};
export {};
//# sourceMappingURL=getNativeBalanceOperation.d.ts.map