import { Core, Camelize, PaginatedOperation, DateInput, PaginatedResponseAdapter } from '@moralisweb3/common-core';
import { EvmChainish, EvmAddressish, EvmTransactionLog } from '../../dataTypes';
import { operations } from '../openapi';
declare type OperationId = 'getContractLogs';
declare type PathParams = operations[OperationId]['parameters']['path'];
declare type QueryParams = operations[OperationId]['parameters']['query'];
declare type RequestParams = PathParams & QueryParams;
declare type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetContractLogsRequest extends Camelize<Omit<RequestParams, 'chain' | 'address' | 'from_date' | 'to_date'>> {
    chain?: EvmChainish;
    address: EvmAddressish;
    fromDate?: DateInput;
    toDate?: DateInput;
}
export declare type GetContractLogsJSONRequest = ReturnType<typeof serializeRequest>;
export declare type GetContractLogsJSONResponse = SuccessResponse;
export declare type GetContractLogsResponse = ReturnType<typeof deserializeResponse>;
export interface GetContractLogsResponseAdapter extends PaginatedResponseAdapter<GetContractLogsResponse, GetContractLogsJSONResponse['result']> {
}
/** Get the logs for a contract. */
export declare const getContractLogsOperation: PaginatedOperation<GetContractLogsRequest, GetContractLogsJSONRequest, GetContractLogsResponse, GetContractLogsJSONResponse['result']>;
declare function serializeRequest(request: GetContractLogsRequest, core: Core): {
    chain: "0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d";
    subdomain: string | undefined;
    blockNumber: string | undefined;
    fromBlock: string | undefined;
    toBlock: string | undefined;
    fromDate: string | undefined;
    toDate: string | undefined;
    topic0: string | undefined;
    topic1: string | undefined;
    topic2: string | undefined;
    topic3: string | undefined;
    limit: number | undefined;
    cursor: string | undefined;
    address: string;
};
declare function deserializeResponse(jsonResponse: GetContractLogsJSONResponse, request: GetContractLogsRequest, core: Core): EvmTransactionLog[];
export {};
//# sourceMappingURL=getContractLogsOperation.d.ts.map