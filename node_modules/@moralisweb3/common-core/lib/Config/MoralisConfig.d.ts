import { SolNetworkish } from './interfaces';
import { CoreConfig, EvmAddressFormat, EvmChainIdFormat } from './CoreConfig';
import { EvmChainish } from './interfaces/EvmChainish';
declare type CoreConfigType = typeof CoreConfig;
export declare type CoreConfigValues = Omit<{
    [Key in keyof CoreConfigType]: CoreConfigType[Key]['defaultValue'];
}, 'product'>;
export interface EvmUtilsConfigValues {
    formatEvmAddress: EvmAddressFormat;
    formatEvmChainId: EvmChainIdFormat;
}
export interface EvmApiConfigValues {
    defaultEvmApiChain: EvmChainish;
}
export interface SolApiConfigValues {
    defaultSolNetwork: SolNetworkish;
}
export declare type MoralisCoreConfigValues = CoreConfigValues | EvmUtilsConfigValues | EvmApiConfigValues | SolApiConfigValues | {
    [key: string]: string | number;
};
export {};
//# sourceMappingURL=MoralisConfig.d.ts.map