import { Core } from '../Core';
export interface Operation<Request, JSONRequest, Response, JSONResponse> {
    name: string;
    id: string;
    groupName: string;
    method: OperationRequestMethod;
    urlPathPattern: string;
    urlPathParamNames?: (keyof Request)[];
    urlSearchParamNames?: (keyof Request)[];
    bodyType?: OperationBodyType;
    bodyParamNames?: (keyof Request)[];
    isNullable?: boolean;
    firstPageIndex?: number;
    getRequestUrlParams(request: Request, core: Core): OperationRequestUrlParams;
    getRequestBody?(request: Request, core: Core): OperationRequestBody;
    deserializeResponse(jsonResponse: JSONResponse, request: Request, core: Core): Response;
    serializeRequest(request: Request, core: Core): JSONRequest;
    deserializeRequest(jsonRequest: JSONRequest, core: Core): Request;
}
export declare type OperationRequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';
export declare type OperationBodyType = 'properties' | 'raw';
export declare type OperationRequestUrlParams = Record<string, string | string[] | boolean | undefined>;
export declare type OperationRequestBody = OperationRequestPropertiesBody | OperationRequestRawBody;
export declare type OperationRequestPropertiesBody = Record<string, unknown>;
export declare type OperationRequestRawBody = string | number | boolean | object;
//# sourceMappingURL=Operation.d.ts.map